// Миксины - это возможность добавлять шаблоны кода и переиспользовать его. Возможно добавлять аргументы

@mixin style-link ($color)
	display: inline-block
	text-transform: uppercase
	text-decoration: none
	color: $color

// В этом блоке мы создаем миксин , данное свойство работает как переменные , только в миксин мы можем добавить конкретный код далее по всему нашему сайту этот код переиспользовать где нам нужно, в данный момент мы создаем миксин с помощу команды @mixin (название нашего миксина) - для наших ссылок. Например мы знаем что у нас ссылки на нашем сайте всегда будут 1 - Инлайн блочным элиментом 2 - Что они будут всегда заглавными 3 - Убераем декорирование ссылок 4 - Цвет текста - Добавляем эти свойства и дальше образаемся к блоку к которому мы хотим присвоить наш миксин в нашем случае это кнопка .btn , обращаемся к данному классу прописывавем свойство @include (Название нашего миксина) и все работает!

// Мы имеем возвожность в миксины добавлять оприделеные аргументы - (@mixin название миксина ($ название аргумент)) - Значение  Аргумента указывается в том месте где мы задаем мексин (в нашем случае мы применяем наш миксин на кнопке)- Мы указываем уже не название Агумента, а именно значение свойства которое мы Аргументируем в нашем случае мы задали аргумент на свойство  color: $color - (название нашего аргумента в миксине) , назвали аргумент ($color) рядом с названим миксина, далее пошли в нашу кнопку где мы применяем наш миксин и задаем цвет нашего текста таким образом @include style-link($color-grey)! - Этот способ позволяет более гибко использовать миксины.

@mixin clearfix
	&::after
		content: ""
		display: table
		clear: both

// Создаем миксин для фикса нашей Grid сетки на Float и добавляем его к родителькому блоку(.row) наших колонок 
	