//Это компонент кнопки

.btn 
	&, &:link, &:visited
		@include style-link($color-grey)
		//Наш первый миксин
		padding: 1.5rem 4rem
		background: $color-white
		border-radius: 5rem
		transition: all .3s
		position: relative
		font-size: 2rem
		border: none
	&:hover
		transform: translateY(-.4rem)
		box-shadow: $box-shadow
		&::after 
			opacity: 0
			transform: scaleX(1.5) scaleY(1.7)
	&:active
		transform: translateY(-.2rem)
		box-shadow: $box-shadow
	&::after
		content: ""
		background: white
		width: 100%
		height: 100%
		border-radius: 5rem
		display: inline-block
		position: absolute
		top: 0
		left: 0
		z-index: -1
		transition: all .4s
	&_animated
		animation: BtnToUp .5s ease-out .7s
		animation-fill-mode: backwards

.btn_brown
		&, &:link, &:visited
		background: $color-brown-dark
		color: $color-white
		&:hover
		&::after 
			background: $color-brown-dark
// В этом блоке мы стиализуем нашу кнопку , 1) для начала мы обратимся к псевдо классам нашей ссылки , 2) далее делаем текст большими буквами 3) Убераем подчеркивание у ссылки 4) Задаем цвет текста 5) Устанавливаем внутриные оступы для нашей кнопки 6) Задаем фон кнопки 7) Задаем закругление для  кнопки 8) Делаем нашу кнопку инлайн блочным элиментом, для того что бы кнопка не заползала на наши верхние элименты 9) Здесь мы задаем свойство которое дает нам возможность задавать длительность и плавность тех или иных переходов, трансформаций. В нащни случае это плавность на нажатии кнопки которое мы задаем далее 10) &:hover отвечает за наведенение на кнопку , задав псевдо класу &:hover значение transform: translateY(4px) при наведении мы будем её приподнимать на 4пикселя  и свойством box-shadow: добавляем тень при наведении 11) &:active отвечает за нажатие на кнопку , задав псевдо класу &:active значение transform: translateY(2px) при нажатии  мы будем её опускать  на 2пикселя, так же и тут добавляем тень но в этом случае при нажатии тень будет немного прозрачнее. // Добавляем вторую анимацию  при навидении кнопка будет как будто взрываться, для этого нам нужно создать псевдо элимент &::after - который позволяет создать нам дочерний элимент нашей кнопки, (ВАЖНО - для того что бы данный псевдо элимент работал у нас всегда должно стоять  первым свойство content: "") после данного свойства мы задаем цвет фона, ширину , высоту , закругление нашей кнопки  и делаем инлай блочным элиментом для того что бы мы могли её абсолютно позиционировать , но для того что бы все заработало мы должны задать нашему дочернему элименту, то есть .btn свойство position: relative и  выровнять наш псевдо элимент ровно над дочерним элиментом (над кнопкой) задав сверху и слева по 0 пикселей, после нам нужно поместить наш псевдо элимент под наш дочерний элимент (КНОПКУ) - для того что бы поместить наш псоведо элимент под наш дочерний элимент то  задаем ему свойство z-index: -1, после нам нужно вернуться нащему дочернему элиментку к псевдо классу &:hover  и что бы добавать анимацию к кнопке но уже с помощу псевдо элимента, после того где мы задали тень в нашем псевдо классе мы обращаемся к псевдо элименту &::after и используем значения opacity: 0 transform: scaleX(1.5) scaleY(1.7) (Больше об этом свойстве https://developer.mozilla.org/ru/docs/Web/CSS/transform) для того что бы наш псовдо элимент который мы скрывали z-index: -1 начал подносится над нашим дочерним элиментом , далеее мы возвращаемся к нашему псевдо элименту ::after  и задаем ему свойство 	transition: all .4s которое  дает нам возможность обращаться ко всем элимента и  задавать длительность и плавность тех или иных переходов, трансформаций. Далее Добавляем третью анимацию  на нашу кнопку, для этого нам нужно создать новый @keyframes  с двумя точками от 0 до 100% и указать свойство от прозрачного к видимому свойством opacity: 0 - 1 далее мы указываем свойство transform: translateY что бы наш элимент двигался с низу вверх или наооборот это уже по желанию в нашем случаем с низу вверх, после чего мы дожны добавить наш @keyframes кнопке , в нашем случае нам нужно сделать это для определеной кнопки по этому мы должны обратиться  к модификатору нашей кномки  &_animated , по тому что данная анимацию будет находится у нас только в этом разделе. Далее animation: BtnToUp .5s ease-out .7s указываем названим нашей анимации @keyframes  , какое количество времени будет происходить эта анимация. далее то с какими ускорение или замедление будет происходить наша анимаци и последнее значение это время задержки перед тем как эта анимация будет воспроизводится. Далее мы добавляем свойство animation-fill-mode: со значением backwards  даное свойство с значением дает нам возможность скрыть нашу кнопку перед тек как начнется наша анимация болеше об этом свойстве можно почитать https://developer.mozilla.org/ru/docs/Web/CSS/animation-fill-mode

		

