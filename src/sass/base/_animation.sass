//Анимация которая двигает текст слева направо.

@keyframes leftToRight
	0%
		opacity: 0
		transform: translateX(-10rem)
	80%
		transform: translateX(1rem)
		
	100%
		opacity: 1
		transform: translateX(0)
		
//Анимация которая двигает текст справа на лево.

@keyframes rightToLeft
	0%
		opacity: 0
		transform: translateX(10rem)
	80%
		transform: translateX(-1rem)
		
	100%
		opacity: 1
		transform: translateX(0)

//Анимация которая поднимает кнопку на 5 px.
@keyframes BtnToUp
	0%
		opacity: 0
		transform: translateY(5rem)
	
		
	100%
		opacity: 1
		transform: translateY(0)	

// @keyframes  ключевое слово для созданния анимациии, после задаем имя анимации , далее прописываем ключевые точки , на каких процентах будет проходить то или иное действие , мы можем затавать точки от 0 до 100 % их может быть сколько угодно , в нутри кажной точки мы должны прописать действие анимации, например ( на первой точке задаем значение opacity: 0 и на последней  opacity: 1 ) дальше берем наше имя анимации и применяем к нашему заголовку свойством animation-name: leftToRight //Определяет имя @keyframes, настраивающего кадры анимации. Далее animation-duration: 4s Определяет время, в течение которого должен пройти один цикл.И свойством анимацииanimation-delay: 0.1s Настраивает задержку между временем загрузки элемента и временем начала анимации дальеш по желанию настраиваем плавность  animation-timing-function: ease Настраивает ускорение анимации. При обновлении страници наш заголовок сперва не видимый и потом на 4 секунде становится полностю видимый, дальше мы можем заставить наш заголовок двигаться с лева на право или сверху в низу и на оборот используя свойство transform: translateX или transform: translateY больще можно узнать на сайте https://developer.mozilla.org/ru/docs/Web/CSS/CSS_Animations/Using_CSS_anima. Кажен раз когда мы создаем и используем анимацию нам нужно ее оптимизировать нашу анимацию по тому что очень часто бываю сбои, оптимизируем  свойством backface-visibility  которое определяет, видно ли заднюю грань элемента, когда он повёрнут к пользователю. Это свойство имет два значения visible - Задняя сторона видна, когда повёрнута к пользователю. hidden - Задняя поверхность скрыта, что делает элемент невидимым, когда он повёрнутый от пользователя. 

// Добавляем вторую анимацию  при навидении кнопка будет как будто взрываться, для этого нам нужно создать псевдо элимент &::after - который позволяет создать нам дочерний элимент нашей кнопки, (ВАЖНО - для того что бы данный псевдо элимент работал у нас всегда должно стоять  первым свойство content: "") после данного свойства мы задаем цвет фона, ширину , высоту , закругление нашей кнопки  и делаем инлай блочным элиментом для того что бы мы могли её абсолютно позиционировать , но для того что бы все заработало мы должны задать нашему дочернему элименту, то есть .btn свойство position: relative и  выровнять наш псевдо элимент ровно над дочерним элиментом (над кнопкой) задав сверху и слева по 0 пикселей, после нам нужно поместить наш псевдо элимент под наш дочерний элимент (КНОПКУ) - для того что бы поместить наш псоведо элимент под наш дочерний элимент то  задаем ему свойство z-index: -1, после нам нужно вернуться нащему дочернему элиментку к псевдо классу &:hover  и что бы добавать анимацию к кнопке но уже с помощу псевдо элимента, после того где мы задали тень в нашем псевдо классе мы обращаемся к псевдо элименту &::after и используем значения opacity: 0 transform: scaleX(1.5) scaleY(1.7) (Больше об этом свойстве https://developer.mozilla.org/ru/docs/Web/CSS/transform) для того что бы наш псовдо элимент который мы скрывали z-index: -1 начал подносится над нашим дочерним элиментом , далеее мы возвращаемся к нашему псевдо элименту ::after  и задаем ему свойство 	transition: all .4s которое  дает нам возможность обращаться ко всем элимента и  задавать длительность и плавность тех или иных переходов, трансформаций. 
// Добавляем третью анимацию на нашу кнопку, для этого нам нужно создать новый @keyframes  с двумя точками от 0 до 100% и указать свойство от прозрачного к видимому свойством opacity: 0 - 1 далее мы указываем свойство transform: translateY что бы наш элимент двигался с низу вверх или наооборот это уже по желанию в нашем случаем с низу вверх, после чего мы дожны добавить наш @keyframes кнопке , в нашем случае нам нужно сделать это для определеной кнопки по этому мы должны обратиться  к модификатору нашей кномки  &_animated , по тому что данная анимацию будет находится у нас только в этом разделе. Далее animation: BtnToUp .5s ease-out .7s указываем названим нашей анимации @keyframes  , какое количество времени будет происходить эта анимация. далее то с какими ускорение или замедление будет происходить наша анимаци и последнее значение это время задержки перед тем как эта анимация будет воспроизводится. Далее мы добавляем свойство animation-fill-mode: со значением backwards  даное свойство с значением дает нам возможность скрыть нашу кнопку перед тек как начнется наша анимация болеше об этом свойстве можно почитать https://developer.mozilla.org/ru/docs/Web/CSS/animation-fill-mode
		
